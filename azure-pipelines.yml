trigger: none

pool:
  vmImage: ubuntu-latest

variables:
- name: repo_name
  value: "risktec-fask-api"
- name: tag_name
  value: "v1"
- group: risktec-project
#- group: risktec-project-kv

stages:
  - stage: Prerequisites
    displayName: 'Prepare Environment and Copy Files'
    jobs:
      - job: InstallTerraformAndDocker
        displayName: 'Install Terraform and Docker'
        steps:
        - script: |
            sudo apt update
            sudo apt install -y terraform
            terraform -version
          displayName: 'Install Terraform'
        
        - task: DockerInstaller@0
          displayName: 'Install Docker 17.09.0-ce'

      - job: CopyFiles
        displayName: 'Copy Terraform Files'
        steps:
        - task: CopyFiles@2
          inputs:
            SourceFolder: '$(agent.builddirectory)'
            Contents: '**'
            TargetFolder: '$(build.artifactstagingdirectory)'

  - stage: TerraformExecution
    displayName: 'Run Terraform and Create Resources'
    dependsOn: Prerequisites
    jobs:
      - job: TerraformJob
        displayName: 'Run Terraform and Create Initial Resources'
        steps:
        - script: |
            cd infra
            terraform init -backend-config="key=risktecdevterraform.tfstate" -backend-config="access_key=$backend_key"
            terraform validate
            terraform plan
            terraform apply -auto-approve -target=azurerm_resource_group.test_rg
            terraform apply -auto-approve -target=azurerm_key_vault.test_rg
            terraform apply -auto-approve -target=azurerm_container_registry.test_rg
          displayName: 'Run Terraform (RG, Key Vault, Container Registry)'
          env:
            ARM_CLIENT_ID: $(app_id)
            ARM_CLIENT_SECRET: $(app_secret)
            ARM_SUBSCRIPTION_ID: $(subscription_id)
            ARM_TENANT_ID: $(tenant_id)

  - stage: DockerBuild
    displayName: 'Build and Push Docker Image'
    dependsOn: TerraformExecution
    jobs:
      - job: BuildAndPushDockerImage
        displayName: 'Build and Push Docker Image to Container Registry'
        steps:
        - task: DockerInstaller@0
          displayName: 'Ensure Docker Installed'
          
        - task: Docker@2
          displayName: 'Build and Push Docker Image'
          inputs:
            containerRegistry: 'dev-container-registry'
            repository: '$(repo_name)'
            tags: '$(tag_name)'
    #jobs:
    #  - job: BuildAndPushDocker
    #    displayName: 'Build and Push Docker Image'
    #    steps:
    #    - script: |
    #        echo $(acr-password-dev) | docker login $(acr-username-dev).azurecr.io --username $(acr-username-dev) --password-stdin
    #      displayName: 'Login to Azure Container Registry'

    #    - task: Docker@2
    #      displayName: 'Build and Push Docker Image'
    #      inputs:
    #        containerRegistry: '$(acr-username-dev).azurecr.io'  # Use your ACR login server
    #        repository: '$(repo_name)'                        # Reference the variable here
    #        tags: '$(tag_name)'                              # Reference the variable here
    #        command: 'buildAndPush'
    #        dockerfile: '**/Dockerfile'                       # Specify the path to your Dockerfile
    #        buildContext: '$(Build.SourcesDirectory)'        # Set the build context (optional)

    #jobs:
    #  - job: BuildAndPush
    #    displayName: 'Build and Push Docker Image'
    #    steps:
    #      - script: |
    #          echo "Logging in to Azure Container Registry"
    #          az login --service-principal --username $(app_id) --tenant $(tenant_id)  --password $(app_secret)
    #          az acr login --name risktecconregdev
    #          echo "Building Docker image"
    #          ls
    #          docker build -t $(repo_name):$(tag_name)
    #          echo "Tagging the image for ACR"
    #          docker tag $(repo_name):$(tag_name) $(acr-username-dev).azurecr.io/$(repo_name):$(tag_name)
    #          echo "Pushing Docker image to ACR"
    #          docker push $(acr-username-dev).azurecr.io/$(repo_name):$(tag_name)
    #        displayName: 'Build and Push Docker Image'
  
  - stage: AllTerraformExecution
    displayName: 'Run Terraform and Create Resources'
    dependsOn: DockerBuild
    jobs:
      - job: TerraformJob
        displayName: 'Run Terraform and Create All Resources'
        steps:
        - script: |
            cd infra
            terraform init -backend-config="key=risktecdevterraform.tfstate" -backend-config="access_key=$backend_key"
            terraform refresh
            terraform validate
            terraform plan
            terraform apply -var "repo_name=$(repo_name)" -var "tag_name=$(tag_name)" -auto-approve 
          displayName: 'Run Terraform (Create all resources)'
          env:
            ARM_CLIENT_ID: $(app_id)
            ARM_CLIENT_SECRET: $(app_secret)
            ARM_SUBSCRIPTION_ID: $(subscription_id)
            ARM_TENANT_ID: $(tenant_id)
